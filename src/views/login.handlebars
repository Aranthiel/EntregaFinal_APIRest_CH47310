<h1>LOGIN</h1>
User
<form id="loginForm" >
    email: <input type="email" name="email" id="email">
    password: <input type="password" name="password" id="password">

    <button type="button" id="localLogin">Local Login</button>
    <button type="button" id="passportLogin">Passport Login</button>
    <button type="button" id="githubLogin">Github Login</button>    
</form>
<p>Si aun no lo hiciste, <a href="{{baseURL}}//signup">Registrate acá</a></p>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const baseURL = "http://localhost:8080";
        
        const localLoginBtn = document.getElementById('localLogin');
        const passportLoginBtn = document.getElementById('passportLogin');
        const githubLoginBtn = document.getElementById('githubLogin');

        localLoginBtn.addEventListener('click', () => {
            sendForm(`${baseURL}/api/auth/login`);
        });

        passportLoginBtn.addEventListener('click', () => {
            alert('Esta función aún no está implementada. Estamos trabajando para brindarte más opciones de inicio de sesión.');
        });

        githubLoginBtn.addEventListener('click', (event) => {
            event.preventDefault();
            alert('Esta función aún no está implementada. Estamos trabajando para brindarte más opciones de inicio de sesión.');
        });

        function sendForm(url) {
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            const formData = {
                email: email,
                password: password
            };

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
            .then(response => {
                if (response.status === 200) {
                    response.json().then(data => {
                        // Almacenar el token en una cookie con una duración de una semana
                        const oneWeek = 7 * 24 * 60 * 60 * 1000; // Una semana en milisegundos
                        const expirationDate = new Date(Date.now() + oneWeek);
                        document.cookie = `token=${data.token}; expires=${expirationDate.toUTCString()}; path=/`;

                        // Almacenar la información del usuario en el localStorage
                        localStorage.setItem('APIuser', JSON.stringify({
                            first_name: data.user.first_name,
                            last_name: data.user.last_name,
                            email: data.user.email,
                            from_github: data.user.from_github,
                            cart: data.user.cart,
                            _id: data.user._id
                        }));
                        localStorage.setItem('cart', JSON.stringify({
                            cart: data.user.cart,}));
                        
                        // Redirigir al usuario a la página de inicio
                        window.location.href = `${baseURL}/home`;
                    });
                }
            })
            .catch(error => {
                console.error('Error al enviar la petición:', error);
            });
        }

    });
</script>
